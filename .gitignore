# Создано с помощью https://www.toptal.com/developers/gitignore/api/python,django
# Отредактируйте на https://www.toptal.com/developers/gitignore?templates=python,django

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# Если процесс сборки включает в себя запуск collectstatic, то вам, вероятно, не нужно или не хочется включать статические файлы/
# в ваш репозиторий Git. Обновите и раскомментируйте следующую строку соответствующим образом.
# <имя-проекта-django>/staticfiles/

### Django.Python Stack ###
# Файлы, скомпилированные / оптимизированные / DLL
*.py[cod]
*$py.class

# Расширения C
*.so

# Распространение / упаковка
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Обычно эти файлы создаются скриптом Python из шаблона# перед сборкой exe-файла PyInstaller, чтобы добавить в него дату/другую информацию.
*.manifest
*.spec

# Журналы установки
pip-log.txt
pip-delete-this-directory.txt

# Отчёты о модульных тестах / покрытии
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Переводы
*.mo

# Django-stuff:

# Flask-stuff:
instance/
.webassets-cache

# Scrapy-stuff:
.scrapy

# Документация Sphinx
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv # 598, рекомендуется включить Pipfile .заблокировать систему управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей, зависящих от платформы, или зависимостей
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают, или нет.
# установите все необходимые зависимости.
#Pipfile.блокировка

# поэзия
# Аналогично Pipfile.lock, обычно рекомендуется включать poetry.lock в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и чаще всего игнорируется для библиотек.
#
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
# Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
#pdm.lock
# pdm хранит общесистемные конфигурации в .pdm.toml, но рекомендуется не включать его
# в систему контроля версий.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; используется, например, в github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Файлы Celery
celerybeat-schedule
celerybeat.pid

# Файлы, проанализированные SageMath
*.sage.py

# Среды
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# Статический анализатор типов pytype
.pytype/

# Отладочные символы Cython
cython_debug/

# PyCharm
# Шаблон JetBrains хранится в отдельном файле JetBrains.gitignore, который можно
# найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и добавить в глобальный файл gitignore или объединить с этим файлом. Для более радикального
# варианта (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.idea/

### Python ###
# Байт-компилированные / оптимизированные / файлы DLL

# Расширения C

# Распространение / упаковка

# PyInstaller
# Обычно эти файлы создаются скриптом Python из шаблона
# перед сборкой PyInstaller, чтобы добавить в него дату/другую информацию.

# Журналы установки

# Отчёты о модульных тестах / покрытии

# Переводы

# Файлы Django:

# Файлы Flask:

# Файлы Scrapy:

# Документация Sphinx

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv # 598, рекомендуется включать Pipfile .заблокируйте систему управления версиями.
# Однако в случае совместной работы, если есть зависимости, специфичные для платформы, или зависимости,
# не поддерживающие кроссплатформенную работу, pipenv может установить зависимости, которые не работают, или не
# установить все необходимые зависимости.

# poetry
# Как и в случае с Pipfile.lock, обычно рекомендуется включать poetry.lock в систему контроля версий.
# Это особенно рекомендуется для двоичных пакетов, чтобы обеспечить воспроизводимость, и чаще
# игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control

# pdm
# Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
# pdm хранит общесистемные конфигурации в .pdm.toml, но рекомендуется не включать его
# в систему контроля версий.
# https://pdm.fming.dev/#use-with-ide

# PEP 582; используется, например, в github.com/David-OConnor/pyflow и github.com/pdm-project/pdm

# Содержимое Celery

# Файлы, проанализированные SageMath

# Среды

# Настройки проекта Spyder

# Настройки проекта Rope

# Документация mkdocs

# mypy

# Проверка типов Pyre

# Статический анализатор типов pytype

# Отладочные символы Cython

# PyCharm
 Конкретный шаблон # JetBrains поддерживается в отдельном файле JetBrains.gitignore, который можно
# найти по ссылке https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и который можно добавить в глобальный файл gitignore или объединить в этот файл. Для более детального использования
 параметр # (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.

### Исправление для Python ###
# Файл локальной конфигурации Poetry — https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# Файлы конфигурации LSP
pyrightconfig.json

.idea
.env


# Конец https://www.toptal.com/developers/gitignore/api/python,django